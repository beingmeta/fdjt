/* Copyright (C) 2001-2009 beingmeta, inc.
   This file is a part of the FDJT web toolkit (www.fdjt.org)
   These are style declarations that work with the UI elements
    implemented in handlers.js and other files.

   This program comes with absolutely NO WARRANTY, including implied
   warranties of merchantability or fitness for any particular
   purpose.

    Use, modification, and redistribution of this program is permitted
    under either the GNU General Public License (GPL) Version 2 (or
    any later version) or under the GNU Lesser General Public License
    (version 3 or later).

    These licenses may be found at www.gnu.org, particularly:
      http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
      http://www.gnu.org/licenses/lgpl-3.0-standalone.html
*/

@charset "UTF-8";

/* New simplified display classes */

.checkspan { white-space: nowrap; cursor: pointer;}
.checkspan[ischecked] { font-weight: bold; }
/* This enables checkspans which have both left and right
   display values to control which side the text appears on */
.checkspan span.left { display: none;}

.checkspan .checkspan input[type='CHECKBOX'] { display: none;}
.checkspan > img.checked { 
  display: none; vertical-align: bottom; margin: 1px;}
.checkspan > img.unchecked { 
  display: inline; vertical-align: bottom; margin: 1px;}
.checkspan[ischecked] > img.unchecked { display: none;}
.checkspan[ischecked] > img.checked { display: inline;}
.checkspan > span.checked { display: none; }
.checkspan > span.unchecked { display: inline; }
.checkspan[ischecked] > span.checked { display: inline; }
.checkspan[ischecked] > span.unchecked { display: none; }

/* Autoprompt classes */

input.autoprompt {
  font-family: sans,sans-serif; }
input.autoprompt[isempty] { font-style: italic; color: gray;}
input.autoprompt_empty {
  font-family: sans,sans-serif; font-weight: normal; font-style: italic;
  color: gray; height: 18px; }

textarea.autoprompt {
  font-family: sans,sans-serif;}
textarea.autoprompt[isempty] { font-style: italic; color: gray;}

/* Input help classes */

.helptext { color: purple;}
span.helptext { display: none; }
div.helptext { display: none; }
td.helptext { display: none; }
p.helptext { display: none; }

body.showhelp span.helptext { display: block;}
body.showhelp div.helptext { display: block;}
body.showhelp td.helptext { display: table-cell;}
body.showhelp p.helptext { display: block;}

img.helpicon { 
  padding-right: 2px; padding-left: 2px;
  margin-left: 1px; margin-right: 0px;
  color: yellow; background-color: gray;
  font-size: 80%; vertical-align: middle;
  font-weight: bold; font-style: normal;}

/* Tabs */

div.tabbar { line-height: 200%;}

a.tab:visited { color: inherit;}
a.tab:hover { color: darkblue; text-decoration: underline;}
a.tab, span.tab {
  color: inherit;
  font-family: sans,sans-serif;
  margin-left: 2px; margin-right: 2px;
  border: outset black 2px;
  padding: 3px;}
a.tab[shown], span.tab[shown] {
  /* font-weight: bold; */
  border: inset black 2px;
  border-bottom: hidden;}
div.tabbar.vertical[shown] {
  border-bottom: inset;}
div.tabcontent {
 margin-left: 9px; margin-top: 6px; margin-right: 9px;
 text-align: left;
 display: none;}
div.tabcontent[shown] { display: block; }
div.tabcontent div.tabcontent[shown] { display: none; }
div.tabcontent[shown] div.tabcontent[shown] { display: block; }

div.tabcontent div.narrative {
 color: purple; font-family: sans; font-style: italic;}
div.tabcontent p {
 margin: 2px; padding: 2px;}

/* DTerms (from knowlets) */

span.dterm {
  opacity: .95; color: blue; font-family: sans,sans-serif; white-space: nowrap;}
span.dterm span.disambig {
  color: red;}
span.dterm .langid {
  color: green; font-style:italic; font-family: fixed;}

/*
span.dterm { 
  background-color: lightblue; 
  padding: 4px; padding-top: 2px; padding-bottom: 2px;
  -khtml-border-radius: 8px; 
  -webkit-border-radius: 8px; 
  -moz-border-radius: 8px;
  border-radius: 8px;}
*/
/* :hover > .dterm { text-decoration: overline; } */

/* Wordforms and langids */

span.wordform {
  white-space: nowrap; color: black;}
span.wordform sub.langids {
  color: green; font-family: fixed;}
span.wordform .langid {
  color: green; font-family: fixed;}

/* Glosses */

p.gloss {
  font-style: italic; font-family: sans;}
p.gloss span.spacer {
  padding-left: 6px; padding-right: 6px;
  font-family: sans; font-weight: bold; font-size: 150%;}

/* Font sizers */

span.font_sizer {
  float: right; width: 16px; -moz-opacity: 0.75;
  font-size: 14px; font-weight: bold; 
  text-align: center; cursor: pointer; margin: 2px;
  background: gray; color: white;}

/* Flexboxes */

div.flexbox { max-height: 128px;}
div.flexbox_expanded { max-height: inherit;}

/* Data tables */

table.fdjtdata {width: 100%; font-family: fixed;}
table.fdjtdata th { 
  vertical-align: top; text-align: right; padding-right: 2px;}
table.fdjtdata td { 
  vertical-align: top; text-align: left; padding-left: 2px;}

table.fdjt {width: 100%; font-family: sans,sans-serif;}
table.fdjt th { vertical-align: top; text-align: right;}
table.fdjt td { vertical-align: top; text-align: left;}
table.fdjt td input[type='TEXT'] { width: 100%;}


/* Auto completion */

div.completions {
  font-size: 12px; font-family: sans,sans-serif;}
.completions { display: none;}
div.completions.open { display: block;}
span.completions.open { display: inline;}

.completions .nocompletemsg { display: none;}
.completions.noresults span.nocompletemsg { display: inline;}
.completions.noresults li.nocompletemsg { display: list-item;}
.completions.noresults div.nocompletemsg { display: block;}
.completions.noresults p.nocompletemsg { display: block;}

.completions .completion { display: none; }
.completions .completion .variation { display: none; }
.completions .completion[displayed] .variation { display: none; }

.completions.noinput span.completion.cue { display: inline; }
.completions.noinput li.completion.cue { display: list-item; }
.completions.noinput div.completion.cue { display: block; }

.completions.showempty.noinput span.completion { display: inline; }
.completions.showempty.noinput li.completion { display: list-item; }
.completions.showempty.noinput div.completion { display: block; }

.completions .noinputmsg { display: none;}

.completions.maxcomplete .completion[displayed] { display: none;}

.completions .maxcompletemsg { display: none;}
.completions.maxcomplete span.maxcompletemsg { display: inline;}
.completions.maxcomplete a.maxcompletemsg { display: inline;}
.completions.maxcomplete li.maxcompletemsg { display: list-item;}
.completions.maxcomplete div.maxcompletemsg { display: block;}
.completions.showmaxcomplete span.maxcompletemsg { display: inline;}
.completions.showmaxcomplete a.maxcompletemsg { display: inline;}
.completions.showmaxcomplete li.maxcompletemsg { display: list-item;}
.completions.showmaxcomplete div.maxcompletemsg { display: block;}
.completions.noinput .maxcompletemsg { display: none;}

.maxcompletemsg .hideall { color: blue; font-style: italic;}
.maxcompletemsg .showall { color: blue; font-style: italic;}
.completions.maxcomplete .maxcompletemsg .hideall { display: none;}
.completions.showmaxcomplete .maxcompletemsg .showall { display: none;}

/*
.completions.maxcomplete span.completion[displayed] { display: none;}
.completions.maxcomplete li.completion[displayed] { display: none;}
.completions.maxcomplete div.completion[displayed] { display: none;}
*/

.completions.noinput span.noinputmsg { display: inline;}
.completions.noinput li.noinputmsg { display: list-item;}
.completions.noinput div.noinputmsg { display: block;}
.completions.noinput p.noinputmsg { display: block;}

.completions span.completion[displayed] { display: inline;}
.completions li.completion[displayed] { display: list-item;}
.completions div.completion[displayed] { display: block;}

.completions .completion[displayed] span.variation[displayed] { 
   display: inline; }
.completions .completion[displayed] li.variation[displayed] { 
   display: list-item; }
.completions .completion[displayed] div.variation[displayed] { 
   display: block; }

.completions.maxcomplete .completion[displayed] .variation[displayed] { 
   display: none; }

/*
.completions.maxcomplete .completion[displayed] li.variation[displayed] { 
   display: none; }
.completions.maxcomplete .completion[displayed] li.variation[displayed] { 
   display: none; }
.completions.maxcomplete .completion[displayed] div.variation[displayed] { 
   display: none; }
*/

.completions.checkspans span.completion.checkspan[ischecked] { 
  display: inline; }
.completions.checkspans li.completion.checkspan[ischecked] { 
  display: list-item; }
.completions.checkspans div.completion.checkspan[ischecked] { 
  display: block; }
.completions.checkspans p.completion.checkspan[ischecked] { 
  display: block; }

.completions.checkspans .
  completion.checkspan[ischecked]
     span.variation[displayed] { display: inline; }
.completions.checkspans .
  completion.checkspan[ischecked]
     li.variation[displayed] { display: list-item; }
.completions.checkspans .
  completion.checkspan[ischecked]
     div.variation[displayed] { display: block; }
.completions.checkspans .
  completion.checkspan[ischecked]
     div.variation[displayed] { display: block; }

/* Rich tips 
   Richtips are overlayed tooltips for metakeys, displayed
   in translucent rectangles.
*/

div.richtip {
  text-align: left; padding: 3px;
  font-size: 12px; font-family: sans-serif; font-weight: normal;
  width: 33%; position: absolute; top: 24pt; left: 24pt;
  display: none; background: lightgray;
  opacity: .85; -moz-opacity: .85; -webkit-opacity: 0.85;
  z-index: 32;}
div.richtip:hover { 
  opacity: 0.95; -moz-opacity: 0.95; -webkit-opacity: 0.95;}

div.richtip span.dterm {
  color: blue; font-size: 14px; font-weight: bold;}
div.richtip span.disambiguator {
  color: red; font-size: 14px; font-weight: bold;}
div.richtip span.term {
  color: blue; font-size: 14px; font-weight: bold;}

div.richtip span.gloss {
  color: black; font-style: italic;}
div.richtip div.rel {}
div.richtip div.rel span.relname {
  font-weight: bold; padding: 2px; color: purple;}

div.richtip span.controls { 
  float: right; display: none;
  text-align: right; vertical-align: top;}
div.richtip.static span.controls { 
  float: right; display: inline; padding-left: 5px;}
div.static.richtip { display: block;}
div.live.richtip { display: block;}

div.richtip span.controls .button {
  font-weight: bold; font-size: 150%; color: brown; 
  padding: 0px; margin: 0px; padding-right: 1px;
  cursor: pointer; vertical-align: top;}

div.richtip.minimized { max-height: 45px;}
div.richtip.minimized .maximize { display: inline; }
div.richtip.minimized .minimize { display: none; }
div.richtip .minimize { display: inline; }
div.richtip .maximize { display: none; }

/* Some utility definitions */

.fullwidth { width: 100%;}
.abstopright { position: absolute; top: 2px; right: 2px;}
.abstopleft { position: absolute; top: 2px; left: 2px;}
.abstopleft img {border: 0px;}
.abstopright img {border: 0px;}
.floatleft { float: left;}
.floatright { float: right;}

/* Twisties */

div.twisties {}
div.twisties span.twisty { 
  vertical-align: top; cursor: pointer;}
div.twisties span.twisty img { font-weight: bold;}
div.twisties span.twisty img[alt='-'] { display: none;}
div.twisties.expanded span.twisty img[alt='-'] { display: inline;}
div.twisties.expanded span.twisty img[alt='+'] { display: none;}
div.twisties.expanded span.twisty { font-weight: bold;}

/* Displaying deadlinks as red, Wikipedia style */

a.deadlink { color: red;}
span.underline { text-decoration: underline;}

/* Emacs local variables
;;;  Local variables: ***
;;;  compile-command: "make; if test -f ../makefile; then cd ..; make; fi" ***
;;;  End: ***
*/
